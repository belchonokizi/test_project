plugins {
    id 'java'
    id 'io.qameta.allure' version '2.9.6'
}

group = 'org.example'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    compileOnly 'org.projectlombok:lombok:1.18.34'
    annotationProcessor 'org.projectlombok:lombok:1.18.34'

    implementation 'org.seleniumhq.selenium:selenium-java:4.23.1'
    implementation 'io.github.bonigarcia:webdrivermanager:5.9.2'
    implementation 'org.seleniumhq.selenium:selenium-chrome-driver:4.23.1'
    implementation 'com.typesafe:config:1.4.3'
    testImplementation 'com.codeborne:selenide:7.0.4'

    testCompileOnly 'org.projectlombok:lombok:1.18.34'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.34'

    testImplementation 'org.aspectj:aspectjweaver:1.9.5'
    testImplementation 'io.qameta.allure:allure-junit5:2.12.1'
    testImplementation 'io.qameta.allure:allure-commandline:2.12.1'
    testImplementation 'io.qameta.allure:allure-assertj:2.12.1'
    testImplementation 'io.qameta.allure:allure-rest-assured:2.12.1'
    testImplementation 'io.qameta.allure:allure-java-commons:2.12.1'
    testImplementation 'io.qameta.allure:allure-selenide:2.12.1'

    testImplementation 'io.rest-assured:rest-assured:5.4.0'


    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

//задача для запуска упавших тестов
task rerunTests(type: Exec) {
    def testFilePath = "src/test/resources/failed-tests.txt"
    def os = org.gradle.nativeplatform.platform.internal.DefaultNativePlatform.currentOperatingSystem;

    def terminal = os.isWindows() ? "cmd" : "bash"
    def commandKey = os.isWindows() ? "/c" : "-c"
    if (new File(testFilePath).exists()) {
        def testFileContent = new File(testFilePath).text.trim()
        if (!testFileContent.isEmpty()) {
            commandLine terminal, commandKey, "gradlew clean test $testFileContent"
        } else {
            commandLine terminal, commandKey, "echo test file is empty"
        }
    } else {
        commandLine terminal, commandKey, "echo test file does not exist"
    }
}